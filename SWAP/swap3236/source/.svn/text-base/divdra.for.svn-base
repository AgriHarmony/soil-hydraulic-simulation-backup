! File VersionID:
!   $Id$
! ----------------------------------------------------------------------
      SUBROUTINE DIVDRA( NumComp, NumDrain,ThickComp,ksatfit,LAYER,
     &                   COFANI, GWLEV, DistDrain, FluxDr,FluxDrComp,
     &                   Swnrsrf,SwTopnrsrf,Zbotdr)  
! ----------------------------------------------------------------------
!     Date               : 29/9/99
!     Purpose            : Simulation of lateral waterfluxes in the
!                          saturated zone. In two steps:
!                          1. Calculate bottom-boundaries of
!                             model_discharge_layers;
!                          2. Distribute drainage fluxes over each
!                             model_discharge_layer.
!                          
!     Subroutines called : -                                           
!     Functions called   : -                                     
!     File usage         : -
!     Differences SWAP/SWAPS: None
!     Remarks            : Joop Kroes (July 3,2003): COFANI = Khor/Kvert
! ----------------------------------------------------------------------
      IMPLICIT NONE
      Include 'Arrays.Fi'

      INTEGER DrainSequence(Madr),Icomp,idr,iidr
      INTEGER idum,jdr,NumComWatLev,NumComBotDislay(Madr),NumActDrain
      INTEGER NumDrain,NumComp,LAYER(MACP)
      INTEGER Swnrsrf, SwTopnrsrf, NumDrHlp, NumComBotIntflw

      real*8  FacAniso,CondSatHorAv,CondSatVerAV,BotDisLay(Madr)
      real*8  ThickCum
      real*8  CumThickCondHor,CumThickCondVer,DistDrain(Madr),Dum
      real*8  FluxDr(Madr),FluxDrComp(Madr,MACP),FlowDrDisch(Madr)
      real*8  HelpFl(Madr)
      real*8  HelpTh,HelpTr,MaxDepthDislay(Madr),CondSatHor(MACP)
      real*8  CondSatVer(MACP),Small,ThickComp(MACP),ThickCompSatWatLev
      real*8  ThickCompBotDislay(Madr),Transmissivity(Madr)
      real*8  WatLevAv,GWLEV
      real*8  COFANI(MAHO), ThickDislay

      real*8  ksatfit(MAHO), Zbotdr(Madr)
      real*8  ThickCompBotIntflw, ThickCompUndIntflw, TransmisIntflw 

      LOGICAL NonExistFluxDr

      DATA    Small /1.0d-10/

! ----------------------------------------------------------------------
! --- paragraph 1 
! --- initial calculations
!
! --- groundwater level converted to cm below surface level 
      WatLevAv = -1.0d0*MIN(GWLEV,0.0d0)

! --- calculation of CondSatHor and CondSatVer
      do 10 icomp = 1,NumComp
        CondSatHor(icomp) = ksatfit(LAYER(icomp))*COFANI(LAYER(icomp))
        CondSatVer(icomp) = ksatfit(LAYER(icomp))
 10   continue

! --- Initialisation and test whether any drainflux exists
      NonExistFluxDr = .true.
      do idr=1,NumDrain
         if( abs( FluxDr(idr) ) .gt. Small ) NonExistFluxDr = .false.
         do icomp = 1, NumComp
            FluxDrComp(idr,icomp) = 0.0d0
         enddo
         DrainSequence(idr) = 0
      enddo      
      if( NonExistFluxDr ) return

! --- paragraph 2 
! --- Search for compartment with groundwaterlevel (NumComWatLev)
      NumComWatLev = 1
      ThickCum     = ThickComp(1)
      do while (WatLevAv.gt.ThickCum)
         NumComWatLev = NumComWatLev + 1
         ThickCum     = ThickCum + ThickComp(NumComWatLev)
      enddo
! --- saturated part (ThickComp_unsat) of compartment with waterlevel
      ThickCompSatWatLev = ThickCum - WatLevAv

! --- paragraph 3 
! --- RobHen 30-09-2004; in case of interflow: the bottom of the highest order 
! --- drainage system (-Zbotdr(NumDrain)) represents max depth of the interflow 
! --- discharge layer and top of all other model_discharge_layers 
      NumDrHlp = NumDrain
! kroes 20080707 : allow disabling of option
      if( (Swnrsrf.eq.1.or.Swnrsrf.eq.2) .and. Swtopnrsrf.eq.1) then
        NumDrHlp = NumDrain-1
        if ( FluxDr(NumDrain).gt.Small ) then
! --- 3a determine bottom and total transmissivity of the interflow 
! --- discharge layer
           NumComBotIntflw = NumComWatLev    
           TransmisIntflw  = CondSatHor(NumComBotIntflw) *
     &                     ThickCompSatWatLev
           do while (-ZBotDr(NumDrain).gt.ThickCum) 
             NumComBotIntflw = NumComBotIntflw + 1
             ThickCum        = ThickCum + ThickComp(NumComBotIntflw)
             TransmisIntflw  = TransmisIntflw + 
     &                        CondSatHor(NumComBotIntflw) *
     &                        ThickComp(NumComBotIntflw)
           enddo
           ThickCompUndIntflw = ThickCum - (-ZBotDr(NumDrain))
           ThickCompBotIntflw = ThickComp(NumComBotIntflw) - 
     &                        ThickCompUndIntflw
           TransmisIntflw     = TransmisIntflw - 
     &                        CondSatHor(NumComBotIntflw) *
     &                        ThickCompUndIntflw
           if (NumComBotIntflw.eq.NumComWatLev) then
            ThickCompSatWatLev = ThickCompSatWatLev - ThickCompUndIntflw
            ThickCompBotIntflw  = ThickCompSatWatLev
           endif

! --- 3b distribute interflow fluxes as lateral fluxes over compartments
! --- of the interflow discharge layer
           idr = NumDrain
           FluxDrComp(idr,NumComWatLev) = FluxDr(idr) * 
     &      ThickCompSatWatLev*CondSatHor(NumComWatLev) / TransmisIntflw
           do icomp = NumComWatLev+1, NumComBotIntflw-1
            FluxDrComp(idr,icomp) = FluxDr(idr) * ThickComp(icomp) *
     &                              CondSatHor(icomp) / TransmisIntflw
           enddo
           FluxDrComp(idr,NumComBotIntflw) = FluxDr(idr) * 
     &                      ThickCompBotIntflw * 
     &                      CondSatHor(NumComBotIntflw) / TransmisIntflw

! --- 3c reset variables for determinig top of all other model_discharge_layers 
          WatLevAv = -ZBotDr(NumDrain)
          NumComWatLev = NumComBotIntflw
          ThickCompSatWatLev = ThickCompUndIntflw
        endif
! --- no other drainage levels besides interflow -> leave DIVDRA
        if (NumDrHlp.eq.0) return
      endif

! --- paragraph 4
! --- Calculate overall anisotropic factor model profile and 
! --- cumulative transmissivity as a function of depth
      CumThickCondHor = ThickCompSatWatLev * CondSatHor(NumComWatLev)
      CumThickCondVer = ThickCompSatWatLev / CondSatVer(NumComWatLev)
      ThickCum        = ThickCompSatWatLev

      do icomp=NumComWatLev+1,NumComp
         CumThickCondHor = CumThickCondHor + ThickComp(icomp) * 
     &                       CondSatHor(icomp)
         CumThickCondVer = CumThickCondVer + ThickComp(icomp) /
     &                       CondSatVer(icomp)
         ThickCum        = ThickCum + ThickComp(icomp)
      enddo
      
      CondSatHorAv      = CumThickCondHor / ThickCum
      CondSatVerAv      = ThickCum / CumThickCondVer
      FacAniso          = sqrt( CondSatVerAv / CondSatHorAv )

! --- paragraph 5      
! --- Calculate maximum depth per drainage system and discharge 
! --- flow rate per drainage system 
      do idr=1,NumDrHlp
         MaxDepthDislay(idr) = 0.25d0*DistDrain(idr)*FacAniso+WatLevAv

! ---    beperken tot SWAP profiel dikte
         MaxDepthDislay(idr) = MIN (MaxDepthDislay(idr),
     &                              Thickcum+WatLevAv)
      enddo

! --- paragraph 6      
! --- determine sequence of order of drainage systems 

      NumActDrain = 0
      do idr=1,NumDrHlp
         if ( abs(FluxDr(idr)) .gt. small ) then
            NumActDrain = NumActDrain+1
! bug fixed 5/4/04 by P. Groenendijk; A.A.Veldhuizen is greatly acknowledged
!           new statement:
            DrainSequence(NumActDrain) = idr
!           original statement
!            DrainSequence(NumActDrain) = NumActDrain
            HelpFl(NumActDrain)        = DistDrain(idr)
         end if 
      end do
      
      do idr=1,NumActDrain-1
         do iidr = idr+1,NumActDrain
            if ( HelpFl(idr) .lt. HelpFl(iidr) )then
             dum                 = HelpFl(iidr)
             HelpFl(iidr)        = HelpFl(idr)
             HelpFl(idr)         = dum
             idum                = DrainSequence(iidr)
             DrainSequence(iidr) = DrainSequence(idr)
             DrainSequence(idr)  = idum
            endif
         enddo
      enddo       

      idr = DrainSequence(NumActDrain)
! bug fixed 5/4/04 by P. Groenendijk; A.A.Veldhuizen is greatly acknowledged
!           new statement:
      FlowDrDisch(idr) = abs(FluxDr(idr)*DistDrain(idr))
!           original statement
!      FlowDrDisch(idr) = abs(FluxDr(idr)*HelpFl(idr))
      do iidr=NumActDrain-1,1,-1 
         idr = DrainSequence(iidr)
         jdr = DrainSequence(iidr+1)
! bug fixed 5/4/04 by P. Groenendijk; A.A.Veldhuizen is greatly acknowledged
!           new statement:
         FlowDrDisch(idr) = FlowDrDisch(jdr) + 
     &                      abs(FluxDr(idr)*DistDrain(idr))
!           original statement
!         FlowDrDisch(idr) = FlowDrDisch(jdr) + 
!     &                      abs(FluxDr(idr)*HelpFl(idr))
      enddo

! --- paragraph 7
! --- Bottom of 1st order model_discharge_layer

      idr = DrainSequence(1)
      Transmissivity(idr)     = CumThickCondHor
      BotDisLay(idr)          = ThickCum + WatLevAv
      NumComBotDislay(idr)    = NumComp
      ThickCompBotDislay(idr) = ThickComp(NumComp)           
      
! --- correction of BotDisLay(1) if D1 < 0.25 L \/(kv/kh) 
      if (abs(FluxDr(idr)).gt.Small) then
         if (BotDisLay(idr) .gt. MaxDepthDislay(idr) )then
            BotDisLay(idr) = MaxDepthDislay(idr)
! ---       determine adjusted transmissivity and compartment 
! ---       number which contains bottom of discharge layer
            NumComBotDislay(idr) = NumComWatLev
            HelpTh               = ThickCompSatWatLev
            Transmissivity(idr)  = ThickCompSatWatLev * 
     &                             CondSatHor(NumComWatLev)
! statement modified 28/10/04 by R. Hendriks in order to fix bug below
!     new statement:
            ThickDislay = BotDisLay(idr)-WatlevAv
            do while ( ThickDislay .gt. HelpTh )      
!     original statement:
!            do while ( BotDisLay(idr)-WatlevAv .gt. HelpTh )      
               NumComBotDislay(idr) = NumComBotDislay(idr) + 1       
               HelpTh               = HelpTh + 
     &                                ThickComp(NumComBotDislay(idr))
               Transmissivity(idr)  = Transmissivity(idr) + 
     &                                ThickComp(NumComBotDislay(idr)) * 
     &                                CondSatHor(NumComBotDislay(idr))              
            enddo

            Transmissivity(idr) = Transmissivity(idr) - 
! bug fixed 28/10/04 by R. Hendriks
!     new statement:
     &                          (HelpTh - ThickDislay) * 
!     original statement:
!     &                          (HelpTh - BotDisLay(idr)) * 
     &                          CondSatHor(NumComBotDislay(idr))              
! ---       thickness of part of bottom compartment
            ThickCompBotDislay(idr) = ThickComp(NumComBotDislay(idr)) -
! bug fixed 28/10/04 by R. Hendriks
!     new statement:
     &                              (HelpTh - ThickDislay)
!     original statement:
!     &                              (HelpTh - BotDisLay(idr))
         endif      
      else 
         BotDisLay(idr) = WatLevAv
      endif

! --- paragraph 8
! --- Bottom of 2nd and higher order model_discharge_layers 
! --- for drainage system of orders 2 to NumDrain (number of drains)         
      do iidr=2,NumActDrain
         idr = DrainSequence(iidr) 
         jdr = DrainSequence(iidr-1)
         Transmissivity(idr) = Transmissivity(jdr) * 
     &                         FlowDrDisch(idr) / FlowDrDisch(jdr) 

! --- bottom of discharge layer of order i
!     and thickness of bottom compartment, and
!     number of bottom compartment
         icomp  = NumComWatLev
         HelpTr = ThickCompSatWatLev * CondSatHor(icomp)
         HelpTh = ThickCompSatWatLev
         do while ( HelpTr .lt. transmissivity(idr) )      
            icomp  = icomp + 1       
            HelpTr = HelpTr + ThickComp(icomp)*CondSatHor(icomp)      
            HelpTh = HelpTh + ThickComp(icomp)       
         enddo
         NumComBotDislay(idr)    = icomp
         ThickCompBotDislay(idr) = ThickComp(icomp) - 
     &             ( HelpTr - Transmissivity(idr)) / CondSatHor(icomp)
            BotDisLay(idr)      = WatLevAv + HelpTh +
     &             ( Transmissivity(idr) - HelpTr) / CondSatHor(icomp)

! --- paragraph 9
!     correction of BotDisLay(idr) if D(idr) < 0.25 L(idr) \/(kv/kh) 
         if (BotDisLay(idr).gt. MaxDepthDislay(idr)) then
            BotDisLay(idr) = MaxDepthDislay(idr)

! --- transmissivity of order i, thickness 
!     of bottom compartment, and number 
!     of bottom compartment
            NumComBotDislay(idr) = NumComWatLev
            HelpTh               = ThickCompSatWatLev
            Transmissivity(idr)  = ThickCompSatWatLev * 
     &                             CondSatHor(NumComWatLev)
! statement modified 28/10/04 by R. Hendriks in order to fix bug below
!     new statement:
            ThickDislay = BotDisLay(idr)-WatlevAv
            do while ( ThickDislay .gt. HelpTh )      
!     original statement:
!            do while ( BotDisLay(idr)-WatlevAv .gt. HelpTh )      
               NumComBotDislay(idr) = NumComBotDislay(idr) + 1       
               HelpTh = HelpTh + ThickComp(NumComBotDislay(idr))       
               Transmissivity(idr)  = Transmissivity(idr) + 
     &                               ThickComp(NumComBotDislay(idr)) * 
     &                               CondSatHor(NumComBotDislay(idr))
            enddo
            Transmissivity(idr) = Transmissivity(idr) - 
! bug fixed 28/10/04 by R. Hendriks
!     new statement:
     &                            (HelpTh - ThickDislay) * 
!     original statement:
!     &                            (HelpTh - BotDisLay(idr)) * 
     &                            CondSatHor(NumComBotDislay(idr))              
            ThickCompBotDislay(idr) = ThickComp(NumComBotDislay(idr)) -
! bug fixed 28/10/04 by R. Hendriks
!     new statement:
     &                            (HelpTh - ThickDislay)
!     original statement:
!     &                            (HelpTh - BotDisLay(idr))
         endif   
      enddo

! --- paragraph 10
!     Distribute drainage fluxes as lateral fluxes over 
!     ith order model discharge layers
      do iidr=1,NumActDrain
         idr = DrainSequence(iidr) 
         FluxDrComp(idr,NumComWatLev) = FluxDr(idr)*ThickCompSatWatLev*
     &                              CondSatHor(NumComWatLev) / 
     &                              Transmissivity(idr)
         do icomp=NumComWatLev+1,NumComBotDislay(idr)-1
            FluxDrComp(idr,icomp) = FluxDr(idr)*ThickComp(icomp)*
     &                              CondSatHor(icomp) / 
     &                              Transmissivity(idr)
         enddo
         FluxDrComp(idr,NumComBotDislay(idr)) = FluxDr(idr)*
     &                              ThickCompBotDislay(idr)*
     &                              CondSatHor(NumComBotDislay(idr)) / 
     &                              Transmissivity(idr)
! bug fixed 28/10/04 by R. Hendriks
!     new statement added:
         if (NumComWatLev .eq. NumComBotDislay(idr))
     &       FluxDrComp(idr,NumComBotDislay(idr)) = FluxDr(idr)
      enddo

      return
      end

